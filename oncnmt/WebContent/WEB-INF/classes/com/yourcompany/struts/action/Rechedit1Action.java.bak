/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yourcompany.struts.action;



import java.sql.Connection;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;



import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;



import com.yourcompany.struts.UtilBean.Article;
import com.yourcompany.struts.UtilClass.Connexion;
import com.yourcompany.struts.form.RecheditForm;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.servlet.ServletException;

/** 
 * MyEclipse Struts
 * Creation date: 08-19-2008
 * 
 * XDoclet definition:
 * @struts.action path="/rechedit1" name="recheditForm" parameter="hidden" scope="request" validate="true"
 * @struts.action-forward name="rechedit1" path="/forms/rechedit.jsp"
 */



public class Rechedit1Action extends DispatchAction {
	
	
	public ActionForward annuler(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException {
		RecheditForm recheditForm = (RecheditForm) form;
		
		Connexion connexion=new Connexion();
		Connection con=connexion.createConnection();
		
		Statement st,st1,st2,st3=null;
		ResultSet rs,rs1,rs2,rs3= null;
        String set,txt = null,txt1=null,txt2=null,pq,statu,swap,promo,prior,dist,whp,
        t,r,s,p,test; 
        
        st=con.createStatement();
        st1=con.createStatement();
        st2=con.createStatement();
        st3=con.createStatement();
        
        
		set = recheditForm.getNrec();
		System.out.println(set);
 
		if (set != "")
		{
			txt = set.substring(0,3);
			System.out.println("txt="+txt);
			txt1 = set.substring(4,7);
			System.out.println("txt1="+txt1);
			txt2 = set.substring(8);
			System.out.println("txt2="+txt2);
			}   
		
		 rs=st.executeQuery("select r.rng_id,r.act_id,r.rng_start,r.rng_end,r.rng_id_parent,r.act_id_parent,r.rng_inactif from gss_range r where r.trans_type= 'OPA'and r.whs_id='W00' and r.trans_no='10000'");
		 while (rs.next()){
			 
		    String code1=rs.getString(1).trim();
		    System.out.println(code1);
		    String code2=rs.getString(2).trim();
		    System.out.println(code1);
		    String code3=rs.getString(5).trim();
		    System.out.println(code1);
		    String code4=rs.getString(6).trim();
		    System.out.println(code1);

//les informations du père
		    
 rs2=st2.executeQuery("select r.rng_id,r.act_id,r.rng_start,r.rng_end,r.rng_id_parent,r.act_id_parent, r.rng_inactif,r.profil_id,r.rng_pq,r.rng_statut,r.rng_swap,r.rng_tpd,r.rng_promotion,r.rng_priorite,r.rng_packaged,r.rng_transfert,r.rng_sortie,r.rng_reintegration,r.rng_whs,r.rng_dist from gss_range r where r.rng_id='"+code3+"' and r.act_id='"+code4+"'");
 
 String pere_id=rs2.getString(1).trim();
 System.out.println(pere_id);
 
 String pere_act=rs2.getString(2).trim();
 System.out.println(pere_act);
 
 String pere_start=rs2.getString(3).trim();
 System.out.println(pere_start);
 
 String pere_end=rs2.getString(4).trim();
 System.out.println(pere_end);
 
 
 String pere_profil=rs2.getString(8).trim();
 System.out.println(pere_profil);
 
 pq=getResult(rs2.getString(9));
 System.out.println("9"+pq);

statu=rs2.getString(10).trim();
System.out.println("10"+statu);

swap=getResult(rs2.getString(11));
 System.out.println("11"+swap);

 test=getResult(rs2.getString(12));
 System.out.println("12"+test);
 
promo=getResult(rs2.getString(13));
 System.out.println(promo);
 
prior=getResult(rs2.getString(14));
 System.out.println(prior);

p=rs2.getString(15).trim();
t=rs2.getString(16).trim();
s=rs2.getString(17).trim();
r=rs2.getString(18).trim();
whp=rs2.getString(19).trim();
System.out.println(p+t+s+r+whp);

dist=getResult(rs2.getString(20));
  System.out.println("20"+dist);
	
 
 
		 }
		return null;
	}
	
	
	public String getResult(String Str)
	{
		return ((Str != null) ? Str=Str.trim():Str);	
	}


	public String setResult(String Str)
	{
		return ((Str != null) ? Str : null);	
	}
	
	public ActionForward Editer(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		RecheditForm recheditForm = (RecheditForm) form;
		
		String set,dateDu,dateAu,four,mag,txt = null,txt1=null,txt2=null,requette = null; 
		String no,type,whs,code;
		
		Boolean trouve=false;
		
		
		Connexion connexion=new Connexion();
		Connection con=connexion.createConnection();
		
		
		
		Statement st=null;
		ResultSet rs= null;
		
	//	String txt=null;
		
		ArrayList reception = new ArrayList();
		ArrayList list = new ArrayList();
		//System.out.println("methode rechercher");
		
		
		
		set = recheditForm.getNrec();
		System.out.println(set);
 
		if (set != "")
		{
			txt = set.substring(0,3);
			System.out.println("txt="+txt);
			txt1 = set.substring(4,7);
			System.out.println("txt1="+txt1);
			txt2 = set.substring(8);
			System.out.println("txt2="+txt2);
			}   
		
		
		
		try{
			
			System.out.println("je fais la recherch ds la base");
			st=con.createStatement();
		 rs=st.executeQuery("select gss_transaction.trans_no,gss_transaction.trans_type,gss_transaction.whs_id  from gss_transaction where gss_transaction.trans_no='"+txt2+"' and gss_transaction.whs_id='"+txt1+"' and gss_transaction.trans_type='"+txt+"'");
			
		 if (rs.next()){
		     type=rs.getString(2).trim();
		    System.out.println(type);
		    
		    whs=rs.getString(3).trim();
		    System.out.println(whs);
		    
		    code=rs.getString(1).trim();
		    System.out.println(code);
		    trouve=true; 
		 }  
		}
		
		  catch (Exception e) {
				 
			  System.out.println("la transaction n'éxiste pas");
				trouve=false; 
			 }

if (trouve==false)
{
	recheditForm.setHiddenTest("aucun bon");
		
	  return mapping.findForward("rech2");	
}
/*		 
String[] commande = {"C:\\Program Files\\Adobe\\Acrobat 7.0\\Reader\\AcroRd32.exe","C:\\Documents and Settings\\Admin\\Mes documents\\rapport4.pdf"};

//Runtime.getRuntime().exec(commande);	




Runtime runtime = Runtime.getRuntime(); 
Process process = null; 
try 
{ 
process = runtime.exec(commande); 
} 

catch(Exception err) 

{ 
System.out.println("err = " + err); 
}
*/
/*		
Runtime runtime = Runtime.getRuntime(); 
try 
{
	 System.out.println("je vais ouvrir");	
runtime.exec(new String[] // 2 parametres pris dans un tableau, l'appli et le pdf 
{ 
"C:\\Program Files\\Adobe\\Acrobat 7.0\\Reader\\AcroRd32.exe", 
"C:\\Documents and Settings\\Admin\\Mes documents\\rapport4.pdf"} ); 
} 

catch(Exception err) 

{ 
System.out.println("err = " + err); 
} 		
*/


   try {
       
		
	   
	if((txt.equals("TRA"))||(txt.equals("RTR")))
		
	{
		
		System.out.println("se suis ds otr");
		
		   //chargement et compilation du sous-rapport
	     //chargement et compilation du sous-rapport
	    JasperDesign jasperDesign1 = JRXmlLoader.load("G:\\bon\\transfert.jrxml");
	    JasperReport jasperReport1 = JasperCompileManager.compileReport(jasperDesign1);
	    // - Paramètres à envoyer au rapport
	    Map parameters = new HashMap();
	    parameters.put("Titre", "Titre"); 
	    parameters.put("param1",new String ("'"+txt+"'"));
	   parameters.put("param2", new String("'"+txt1+"'"));
	    parameters.put("param3", new String("'"+txt2+"'"));
	    

	    JasperPrint jasperPrint1 = JasperFillManager.fillReport(jasperReport1, parameters, con);
	    // Chargement et compilation du rapport
	   // JasperDesign jasperDesign = JRXmlLoader.load("G:\\class jrxml\\selonae1.jrxml");
	    JasperDesign jasperDesign = JRXmlLoader.load("G:\\bon\\transfert.jrxml");
	
	    JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
	    // - Execution du rapport
	    JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, con);
	    // pour l'affichage
	   JasperViewer.viewReport(jasperPrint,false);
	    // - Création du rapport au format PDF
	 //   JasperExportManager.exportReportToPdfFile(jasperPrint, "C:\\Documents and Settings\\naima.nabi\\Mes documents\\ireport_raport\\rapport4.pdf");
	  
	}   
	  
	
	if (txt.equals("OTR"))
	{
		  //chargement et compilation du sous-rapport
	     //chargement et compilation du sous-rapport
	    JasperDesign jasperDesign1 = JRXmlLoader.load("G:\\bon\\ordre transfert.jrxml");
	    JasperReport jasperReport1 = JasperCompileManager.compileReport(jasperDesign1);
	    // - Paramètres à envoyer au rapport
	    Map parameters = new HashMap();
	    parameters.put("Titre", "Titre"); 
	    parameters.put("param1",new String ("'"+txt+"'"));
	   parameters.put("param2", new String("'"+txt1+"'"));
	    parameters.put("param3", new String("'"+txt2+"'"));
	    

	    JasperPrint jasperPrint1 = JasperFillManager.fillReport(jasperReport1, parameters, con);
	    // Chargement et compilation du rapport
	   // JasperDesign jasperDesign = JRXmlLoader.load("G:\\class jrxml\\selonae1.jrxml");
	    JasperDesign jasperDesign = JRXmlLoader.load("G:\\bon\\ordre transfert.jrxml");
		
	    
	    JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
	    // - Execution du rapport
	    JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, con);
	    // pour l'affichage
	   JasperViewer.viewReport(jasperPrint,false);
	    // - Création du rapport au format PDF
	 //   JasperExportManager.exportReportToPdfFile(jasperPrint, "C:\\Documents and Settings\\naima.nabi\\Mes documents\\ireport_raport\\rapport4.pdf");
	 
		
	}
	

		if((txt.equals("REC"))||(txt.equals("OPA"))||(txt.equals("PAC"))||(txt.equals("RPA"))||(txt.equals("TRE"))||(txt.equals("REI")))
			
	{
			System.out.println("je s8ds rec");
			
		File projectRealPath=new File(request.getSession().getServletContext().getRealPath("."));
		
		File jasperFile=new File(projectRealPath,"bon/classic4.jrxml");
		
		System.out.println(jasperFile.getAbsolutePath());




			//chargement et compilation du sous-rapport
     //chargement et compilation du sous-rapport
		 JasperDesign jasperDesign1 = JRXmlLoader.load(jasperFile);	
    
		 //JasperDesign jasperDesign1 = JRXmlLoader.load("\\bon\\classic4.jrxml"); 
    JasperReport jasperReport1 = JasperCompileManager.compileReport(jasperDesign1);
    // - Paramètres à envoyer au rapport
    Map parameters = new HashMap();
    parameters.put("Titre", "Titre"); 
    parameters.put("param1",new String ("'"+txt+"'"));
   parameters.put("param2", new String("'"+txt1+"'"));
    parameters.put("param3", new String("'"+txt2+"'"));
    
   // parameters.put("anneuniv", new String("'"+anuniv+"'"));
   	
  //parameters.put("pren_et_f", new String("'1256'"));
    JasperPrint jasperPrint1 = JasperFillManager.fillReport(jasperReport1, parameters, con);
    // Chargement et compilation du rapport
   // JasperDesign jasperDesign = JRXmlLoader.load("G:\\class jrxml\\selonae1.jrxml");
    
    //JasperDesign jasperDesign = JRXmlLoader.load("..\\bon\\classic4.jrxml");
    JasperDesign jasperDesign = JRXmlLoader.load(jasperFile);
    JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
    // - Execution du rapport
    JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, con);
    // pour l'affichage
   JasperViewer.viewReport(jasperPrint,false);
    // - Création du rapport au format PDF
//  JasperExportManager.exportReportToPdfFile(jasperPrint, "rapport4.pdf");
   
  

	} 
		
		else{
			
			  //chargement et compilation du sous-rapport
		     //chargement et compilation du sous-rapport
		    JasperDesign jasperDesign1 = JRXmlLoader.load("G:\\bon\\activation.jrxml");
		    JasperReport jasperReport1 = JasperCompileManager.compileReport(jasperDesign1);
		    // - Paramètres à envoyer au rapport
		    Map parameters = new HashMap();
		    parameters.put("Titre", "Titre"); 
		    parameters.put("param1",new String ("'"+txt+"'"));
		   parameters.put("param2", new String("'"+txt1+"'"));
		    parameters.put("param3", new String("'"+txt2+"'"));
		    
		   // parameters.put("anneuniv", new String("'"+anuniv+"'"));
		   	
		  //parameters.put("pren_et_f", new String("'1256'"));
		    JasperPrint jasperPrint1 = JasperFillManager.fillReport(jasperReport1, parameters, con);
		    // Chargement et compilation du rapport
		   // JasperDesign jasperDesign = JRXmlLoader.load("G:\\class jrxml\\selonae1.jrxml");
		    JasperDesign jasperDesign = JRXmlLoader.load("G:\\bon\\activation.jrxml");
			
		    JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
		    // - Execution du rapport
		    JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, con);
		    // pour l'affichage
		   JasperViewer.viewReport(jasperPrint,false);
		    // - Création du rapport au format PDF
	//   JasperExportManager.exportReportToPdfFile(jasperPrint, "C:\\Documents and Settings\\naima.nabi\\Mes documents\\ireport_raport\\rapport4.pdf");
		  
		  
			
		}
	/*	
		 Runtime runtime = Runtime.getRuntime(); 
		  try 
		  { 
		  runtime.exec(new String[] // 2 parametres pris dans un tableau, l'appli et le pdf 
		  { 
		  "C:\\Program Files\\Adobe\\Acrobat 7.0\\Reader\\AcroRd32.exe", 
		  "C:\\Documents and Settings\\Admin\\Mes documents\\rapport4.pdf"} ); 
		  } 

		  catch(Exception err) 

		  { 
		  System.out.println("err = " + err); 
		  } 
	
   */
    
   }
catch (JRException e) {
     e.printStackTrace();
    } 
catch (Exception ex) {
ex.printStackTrace();
}	


   recheditForm.setNrec("");
   
   
   

	
	
		return mapping.findForward("rech2"); 
	}
}