/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yourcompany.struts.action;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.yourcompany.struts.UtilBean.Ordre;
import com.yourcompany.struts.UtilBean.Profil;
import com.yourcompany.struts.UtilClass.Connexion;
import com.yourcompany.struts.form.Parametre1Form;

/** 
 * MyEclipse Struts
 * Creation date: 11-14-2008
 * 
 * XDoclet definition:
 * @struts.action path="/preparparametre" name="parametre1Form" scope="request" validate="true"
 */
public class PreparparametreAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException {
		Parametre1Form parametre1Form = (Parametre1Form) form;// TODO Auto-generated method stub
	
		Connexion connexion=new Connexion();
		Connection con=connexion.createConnection(request);
		Statement st,st1= null;
		ResultSet rs,rs1 = null;
		ArrayList list = new ArrayList();
		List cdslist = new ArrayList();
		List listdist = new ArrayList();
		List listmagasin= new ArrayList();
		
		st=con.createStatement();
		st1=con.createStatement();
		
	System.out.println("je sais pas si il a deploye ou non");
	System.out.println("je s8 ds prepare parametre acteur");
/*	rs=st.executeQuery("select distinct a.act_id,a.act_name,decode(a.act_status,'A','Actif','I','Inactif','_') from gss_actor a order by act_name ");
	
	while (rs.next())

	{
		Ordre ordre=new Ordre();
        String acteur=rs.getString(2).trim();
		System.out.println(acteur);
		
        String code=rs.getString(1).trim();
		System.out.println(code);
		
		String activer=rs.getString(3).trim();
		System.out.println( activer);
		
		ordre.setCode(code);
		ordre.setUser(acteur);
	    ordre.setAprob(activer);
		list.add(ordre);

	}
	
	parametre1Form.setListacteur(list);*/
	
	
	rs1=st1.executeQuery("select d.dest_nom from  gss_destinataire d where d.dest_type='CDS' and d.dest_status='A'");	

	while (rs1.next())
	{
	String cds=rs1.getString(1).trim();
	System.out.println(cds);
	cdslist.add(cds);
	}
	
	System.out.println(cdslist);
	parametre1Form.setCdslist(cdslist);
	
	/*
	 rs=st.executeQuery("select d.dest_nom from  gss_destinataire d where d.dest_type='DISTRIBUTEUR' and d.dest_status='A'");
	while (rs.next())
	{
		
		String dist=rs.getString(1).trim();
		System.out.println(dist);
		listdist.add(dist);	
	}
	System.out.println(listdist);		
	parametre1Form.setListdist(listdist);
	*/
	
	
	rs=st.executeQuery("select w.whs_adresse from gss_warehouse w where w.whs_status='A' and w.whs_adresse<>'AUCUN'");
	while (rs.next())
	{
		
		String magasin=rs.getString(1).trim();
		System.out.println(magasin);
		listmagasin.add(magasin);	
	}
	System.out.println(listmagasin);		
	            parametre1Form.setWarehouselist(listmagasin);
	            
	            
	            

	            Profil profil=new Profil();   

	            profil.setProfil_user("");
	            profil.setProfil("");
	            profil.setWhs("");
	            profil.setSupprimer("supprimer");
	            list.add(profil);


	            parametre1Form.setListprofil_user(list);
	            
	
	            parametre1Form.setLibelle("");
				parametre1Form.setHiddenTest("");
				parametre1Form.setWarehouse("");
				parametre1Form.setRegion("");
				parametre1Form.setCds("");
				parametre1Form.setDistributeur("");
				parametre1Form.setCoordinateur(false);
		        parametre1Form.setMagaberaki(false);
	            parametre1Form.setSuperviseur_compte(false);
				parametre1Form.setSuperviseur_cds(false);
				parametre1Form.setSuperdist(false);
				parametre1Form.setAdmin(false);
				parametre1Form.setSupereport(false);
				parametre1Form.setSuperpre(false);
				parametre1Form.setSuperpost(false);
				parametre1Form.setCharge(false);
				parametre1Form.setSales(false);
				parametre1Form.setTresor(false);
				parametre1Form.setStockcontrol(false);
				parametre1Form.setSuperviseur_compte(false);
				parametre1Form.setSuperviseur_cds(false);
				parametre1Form.setEdition(false);
				parametre1Form.setApprobateur(false);
				
				  
				 
				
	
				con.close();
				return mapping.findForward("parametr");
			}
		}